{"version":3,"sources":["components/PostsList.tsx","components/Loader/Loader.tsx","components/NewCommentForm.tsx","utils/fetchClient.ts","components/PostDetails.tsx","components/UserSelector.tsx","App.tsx","index.tsx"],"names":["PostsList","posts","selectedPost","selectPost","className","map","post","id","title","type","classNames","onClick","onButtonClick","Loader","NewCommentForm","onSubmit","loading","useState","name","setName","hasAuthorError","setHasAuthorError","email","setEmail","hasEmailError","setHasEmailError","body","setBody","hasBodyError","setHasBodyError","event","preventDefault","trim","onReset","htmlFor","placeholder","value","onChange","target","BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","JSON","stringify","headers","then","fetch","response","json","client","PostDetails","setLoading","errorMessage","setErrorMessage","comments","setComments","isOpenEditor","setIsOpenEditor","isCreatingComment","setIsCreatingComment","useEffect","catch","finally","length","comment","href","commentId","prevComments","filter","prevComment","postId","newComment","currentComments","UserSelector","users","selectedUser","onSelect","openMenu","setOpenMenu","ref","useRef","handleClickOutside","current","contains","document","addEventListener","removeEventListener","role","user","handleSelectUser","App","setUsers","setPosts","setSelectedUser","setSelectedPost","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.786413c7.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Post } from '../types/Post';\n\ntype Props = {\n  posts: Post[];\n  selectedPost: Post | null;\n  selectPost: (post: Post | null) => void;\n\n};\n\nexport const PostsList: React.FC<Props> = (\n  {\n    posts, selectedPost, selectPost,\n  },\n) => {\n  const onButtonClick = (post: Post) => {\n    if (post.id === selectedPost?.id) {\n      selectPost(null);\n    } else {\n      selectPost(post);\n    }\n  };\n\n  return (\n\n    <div data-cy=\"PostsList\">\n      <p className=\"title\">Posts:</p>\n\n      <table className=\"table is-fullwidth is-striped is-hoverable is-narrow\">\n        <thead>\n          <tr className=\"has-background-link-light\">\n            <th>#</th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {posts?.map((post) => (\n            <tr data-cy=\"Post\" key={post.id}>\n              <td data-cy=\"PostId\">{ post.id}</td>\n\n              <td data-cy=\"PostTitle\">\n                { post.title}\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  type=\"button\"\n                  data-cy=\"PostButton\"\n                  className={\n                    classNames('button is-link',\n                      { 'is-light': post.id !== selectedPost?.id })\n                  }\n                  onClick={() => onButtonClick(post)}\n                >\n                  {post.id === selectedPost?.id ? 'Close' : 'Open'}\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { CommentData } from '../types/Comment';\n\ntype Props = {\n  onSubmit: (comment: CommentData) => void;\n  loading: boolean;\n};\n\nexport const NewCommentForm: React.FC<Props> = ({\n  onSubmit,\n  loading,\n}) => {\n  const [name, setName] = useState('');\n  const [hasAuthorError, setHasAuthorError] = useState(false);\n\n  const [email, setEmail] = useState('');\n  const [hasEmailError, setHasEmailError] = useState(false);\n\n  const [body, setBody] = useState('');\n  const [hasBodyError, setHasBodyError] = useState(false);\n\n  const handleAuthorChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n    setHasAuthorError(false);\n  };\n\n  const handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value);\n    setHasEmailError(false);\n  };\n\n  const handleBodyChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setBody(event.target.value);\n    setHasBodyError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setHasAuthorError(!name.trim());\n    setHasEmailError(!email.trim());\n    setHasBodyError(!body.trim());\n\n    if (!name.trim() || !email.trim() || !body.trim()) {\n      return;\n    }\n\n    const newComment = { name, email, body };\n\n    onSubmit(newComment);\n\n    setBody('');\n  };\n\n  const handleReset = () => {\n    setName('');\n    setEmail('');\n    setBody('');\n    setHasAuthorError(false);\n    setHasEmailError(false);\n    setHasBodyError(false);\n  };\n\n  return (\n    <form\n      data-cy=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n      onReset={handleReset}\n    >\n      <div className=\"field\" data-cy=\"NameField\">\n        <label className=\"label\" htmlFor=\"comment-author-name\">\n          Author Name\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"comment-author-name\"\n            placeholder=\"Name Surname\"\n            className={\n              classNames('input', { 'is-danger': hasAuthorError })\n            }\n            value={name}\n            onChange={handleAuthorChange}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\" />\n          </span>\n\n          {hasAuthorError && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {hasAuthorError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Name is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"EmailField\">\n        <label className=\"label\" htmlFor=\"comment-author-email\">\n          Author Email\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"comment-author-email\"\n            placeholder=\"email@test.com\"\n            className={\n              classNames('input', { 'is-danger': hasEmailError })\n            }\n            value={email}\n            onChange={handleEmailChange}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n\n          {hasEmailError && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {hasEmailError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Email is required\n          </p>\n        )}\n      </div>\n\n      <div className=\"field\" data-cy=\"BodyField\">\n        <label className=\"label\" htmlFor=\"comment-body\">\n          Comment Text\n        </label>\n\n        <div className=\"control\">\n          <textarea\n            id=\"comment-body\"\n            name=\"body\"\n            placeholder=\"Type comment here\"\n            value={body}\n            className={\n              classNames('textarea', { 'is-danger': hasBodyError })\n            }\n            onChange={handleBodyChange}\n          />\n        </div>\n\n        {hasBodyError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Enter some text\n          </p>\n        )}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className={\n              classNames('button is-link', { 'is-loading': loading })\n            }\n          >\n            Add\n          </button>\n        </div>\n\n        <div className=\"control\">\n          {/* eslint-disable-next-line react/button-has-type */}\n          <button\n            type=\"reset\"\n            className=\"button is-link is-light\"\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","const BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: unknown = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // for a demo purpose we emulate a delay to see if Loaders work\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => response.json());\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: unknown) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: unknown) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { NewCommentForm } from './NewCommentForm';\nimport { Post } from '../types/Post';\nimport { client } from '../utils/fetchClient';\nimport { Comment, CommentData } from '../types/Comment';\n\ntype Props = {\n  post: Post | null;\n};\n\nexport const PostDetails: React.FC<Props> = ({ post }) => {\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [isOpenEditor, setIsOpenEditor] = useState(false);\n  const [isCreatingComment, setIsCreatingComment] = useState(false);\n\n  const fetchComments = () => {\n    if (!post) {\n      return;\n    }\n\n    setErrorMessage('');\n    setIsOpenEditor(false);\n    setLoading(true);\n\n    client.get<Comment[]>(`/comments?postId=${post.id}`)\n      .then((data) => setComments(data))\n      .catch(() => setErrorMessage('Something went wrong!'))\n      .finally(() => setLoading(false));\n  };\n\n  useEffect(fetchComments, [post]);\n\n  const addComment = (comment: CommentData) => {\n    if (!post) {\n      return;\n    }\n\n    setErrorMessage('');\n    setIsCreatingComment(true);\n\n    client.post<Comment>('/comments',\n      { ...comment, postId: post.id })\n      .then((newComment) => setComments(\n        (currentComments) => [...currentComments, newComment],\n      )).catch(() => setErrorMessage('Something went wrong!'))\n      .finally(() => setIsCreatingComment(false));\n  };\n\n  const deleteComment = (commentId: number) => {\n    client.delete(`/comments/${commentId}`);\n\n    setComments((prevComments) => prevComments\n      .filter(prevComment => prevComment.id !== commentId));\n  };\n\n  return (\n    <div className=\"content\" data-cy=\"PostDetails\">\n      <div className=\"content\" data-cy=\"PostDetails\">\n        <div className=\"block\">\n          <h2 data-cy=\"PostTitle\">\n            {`#${post?.id}: ${post?.title}`}\n          </h2>\n\n          <p data-cy=\"PostBody\">\n            {post?.body}\n          </p>\n        </div>\n\n        <div className=\"block\">\n          {loading && <Loader />}\n\n          {errorMessage && (\n            <div className=\"notification is-danger\" data-cy=\"CommentsError\">\n              {errorMessage}\n            </div>\n          )}\n\n          {comments.length === 0 && !loading && !errorMessage && (\n            (\n              <p className=\"title is-4\" data-cy=\"NoCommentsMessage\">\n                No comments yet\n              </p>\n            )\n          )}\n\n          {comments.length > 0 && !loading && !errorMessage && (\n            <>\n              <p className=\"title is-4\">Comments:</p>\n\n              {comments.map((comment) => (\n                <article\n                  key={comment.id}\n                  className=\"message is-small\"\n                  data-cy=\"Comment\"\n                >\n                  <div className=\"message-header\">\n                    <a href={`mailto:${comment.email}`} data-cy=\"CommentAuthor\">\n                      {comment.name}\n                    </a>\n                    <button\n                      data-cy=\"CommentDelete\"\n                      type=\"button\"\n                      className=\"delete is-small\"\n                      aria-label=\"delete\"\n                      onClick={() => deleteComment(comment.id)}\n                    >\n                      delete button\n                    </button>\n                  </div>\n\n                  <div className=\"message-body\" data-cy=\"CommentBody\">\n                    {comment.body}\n                  </div>\n                </article>\n              ))}\n            </>\n          )}\n\n          {!isOpenEditor && !loading && !errorMessage && (\n            <button\n              data-cy=\"WriteCommentButton\"\n              type=\"button\"\n              className=\"button is-link\"\n              onClick={() => setIsOpenEditor(true)}\n            >\n              Write a comment\n            </button>\n          )}\n        </div>\n\n        {isOpenEditor && (\n          <NewCommentForm\n            loading={isCreatingComment}\n            onSubmit={addComment}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport { User } from '../types/User';\n\ntype Props = {\n  users: User[];\n  selectedUser: User | null;\n  onSelect: (user: User) => void;\n};\n\nexport const UserSelector: React.FC<Props> = (\n  { users, selectedUser, onSelect },\n) => {\n  const [openMenu, setOpenMenu] = useState(false);\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (ref.current && !ref.current.contains(event.target as Node)) {\n        setOpenMenu(false);\n      }\n    };\n\n    document.addEventListener('click', handleClickOutside);\n\n    return () => document.removeEventListener('click', handleClickOutside);\n  }, []);\n\n  const handleSelectUser = (\n    event: React.MouseEvent<HTMLAnchorElement>, user: User,\n  ) => {\n    event.preventDefault();\n    onSelect(user);\n    setOpenMenu(false);\n  };\n\n  return (\n    <div\n      data-cy=\"UserSelector\"\n      className={classNames('dropdown', {\n        'is-active': openMenu,\n      })}\n      ref={ref}\n    >\n      <div className=\"dropdown-trigger\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={() => setOpenMenu(!openMenu)}\n        >\n          <span>\n            {selectedUser?.name ?? 'Choose a user'}\n          </span>\n\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\" />\n          </span>\n        </button>\n      </div>\n\n      <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n        <div className=\"dropdown-content\">\n          {users.map((user) => (\n            <a\n              key={user.id}\n              href={`#user-${user.id}`}\n              className={classNames('dropdown-item', {\n                'is-active': selectedUser?.id === user.id,\n              })}\n              onClick={(event) => handleSelectUser(event, user)}\n            >\n              {user.name}\n            </a>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/bulma.sass';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelector } from './components/UserSelector';\nimport { Loader } from './components/Loader';\nimport { client } from './utils/fetchClient';\nimport { User } from './types/User';\nimport { Post } from './types/Post';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [users, setUsers] = useState<User[]>([]);\n  const [posts, setPosts] = useState<Post[]>([]);\n\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  // eslint-disable-next-line max-len\n  const [selectedPost, setSelectedPost] = useState<Post | null>(null);\n\n  const fetchUsers = () => {\n    setErrorMessage('');\n\n    client.get<User[]>('/users').then((data) => {\n      setUsers(data);\n    }).catch(() => {\n      setErrorMessage('Something went wrong!');\n    });\n  };\n\n  const fetchPosts = () => {\n    if (!selectedUser) {\n      return;\n    }\n\n    setErrorMessage('');\n    setLoading(true);\n    setSelectedPost(null);\n\n    client.get<Post[]>(`/posts?userId=${selectedUser?.id}`).then((data) => {\n      setPosts(data);\n    }).catch(() => {\n      setErrorMessage('Something went wrong!');\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n\n  useEffect(fetchUsers, []);\n  useEffect(fetchPosts, [selectedUser, selectedUser?.id]);\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent\">\n            <div className=\"tile is-child box is-success\">\n              <div className=\"block\">\n                <UserSelector\n                  users={users}\n                  selectedUser={selectedUser}\n                  onSelect={setSelectedUser}\n                />\n              </div>\n\n              <div className=\"block\" data-cy=\"MainContent\">\n                {!selectedUser && (\n                  <p data-cy=\"NoSelectedUser\">\n                    No user selected\n                  </p>\n                )}\n\n                {loading && selectedUser && (<Loader />)}\n\n                {errorMessage && (\n                  <div\n                    className=\"notification is-danger\"\n                    data-cy=\"PostsLoadingError\"\n                  >\n                    {errorMessage}\n                  </div>\n                )}\n\n                {selectedUser\n                  && posts.length === 0\n                  && !loading\n                  && !errorMessage\n                  && (\n                    <div\n                      className=\"notification is-warning\"\n                      data-cy=\"NoPostsYet\"\n                    >\n                      No posts yet\n                    </div>\n                  )}\n\n                {posts.length > 0 && !loading && !errorMessage && (\n                  <PostsList\n                    posts={posts}\n                    selectedPost={selectedPost}\n                    selectPost={setSelectedPost}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div\n            data-cy=\"Sidebar\"\n            className={classNames(\n              'tile',\n              'is-parent',\n              'is-8-desktop',\n              'Sidebar',\n              { 'Sidebar--open': !!selectedPost },\n            )}\n          >\n            {selectedPost && (\n              <div className=\"tile is-child box is-success \">\n                <PostDetails\n                  post={selectedPost}\n                />\n              </div>\n            )}\n          </div>\n\n        </div>\n      </div>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}